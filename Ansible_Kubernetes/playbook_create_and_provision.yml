---

### Spin up servers and wait for them to become responsive
- name: "Create VMs"
  hosts: localhost
  connection: local
  gather_facts: yes
  # collections: # this is new starting with Ansible 2.9 (akin to importing package)
  #   - openstack.cloud
  tasks:
    - include_tasks: tasks/create_cc_cloud_vm.yml
        #This was tested working but last test randomly failed on the 2nd creation, need to look into why.


- name: wait for spin up
  hosts: localhost
  tasks:
  - name: wait
    wait_for:
      timeout: 120
    delegate_to: localhost


## Write /etc/hosts files on both nodes ### 
- name: "collect server info kubemaser"
  hosts: localhost
  connection: local
  gather_facts: yes
  tasks:
    - name: get info from openstack
      openstack.cloud.server_info:
        server: team9-kubemaster-2
      register: result
    - set_fact:
        kubemaster_private: "{{ result.openstack_servers.0.private_v4 }}"
    - set_fact:
        kubemaster_public: "{{ result.openstack_servers.0.public_v4 }}"

- name: "write hosts file kubemaster"
  hosts: vm2
  tasks:
    - name: add private ip to hosts file
      become: yes
      shell: "echo '{{ hostvars['localhost']['kubemaster_private'] }} team9-kubemaster-2 kubemaster kubeworker1' >> /etc/hosts"

    - name: add public ip to hosts file
      become: yes
      shell: "echo '{{ hostvars['localhost']['kubemaster_public'] }} team9-kubemaster-2 kubemaster kubeworker1' >> /etc/hosts"

- name: "collect server info kubeworker"
  hosts: localhost
  connection: local
  gather_facts: yes
  tasks:
    - name: get info from openstack
      openstack.cloud.server_info:
        server: team9-kubeworker-2
      register: result
    - set_fact:
        kubeworker_private: "{{ result.openstack_servers.0.private_v4 }}"
    - set_fact:
        kubeworker_public: "{{ result.openstack_servers.0.public_v4 }}"

- name: "write hosts file kubeworker"
  hosts: vm3
  tasks:
    - name: add private ip to hosts file
      become: yes
      shell: "echo '{{ hostvars['localhost']['kubeworker_private'] }} team9-kubeworker-2 kubeworker kubeworker2' >> /etc/hosts"

    - name: add public ip to hosts file
      become: yes
      shell: "echo '{{ hostvars['localhost']['kubeworker_public'] }} team9-kubeworker-2 kubeworker kubeworker2' >> /etc/hosts"


### Kubernetes installation Start
- name: all nodes kubernetes installation 
  hosts: bothvms
  tasks:
    - name: Update and upgrade packages
      become: yes
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400
        
    - include_tasks: tasks/install_kubernetes.yaml
    
- name: set up master node
  hosts: vm2
  tasks:
    - name: run kubeadm
      become: yes
      shell:  kubeadm init --node-name=kubemaster --pod-network-cidr=10.224.0.0/16

    - name: regular user setup (1/3)
      shell: mkdir -p $HOME/.kube

    - name: regular user setup (2/3)
      shell: sudo cp -i /etc/kubernetes/admin.conf ~/.kube/config

    - name: regular user setup (3/3)
      shell: sudo chown $(id -u):$(id -g) ~/.kube/config

      # may produce an error when it actually succeeds
    - name: "wipe the taint"
      ignore_errors: yes
      shell: kubectl taint nodes kubemaster node-role.kubernetes.io/master:NoSchedule-

    - name: bundle up with flannel
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      register: result

    - name: print result
      debug:
        msg: "{{ result }}"

    - name: collect join command
      shell: kubeadm token create --print-join-command
      register: result

    - set_fact:
        join_command: "{{ result }}"

- name: set up worker node
  hosts: vm3
  tasks:
    - name: join cluster
      become: yes
      shell: "{{ hostvars['129.114.26.158']['join_command']['stdout'] }} --node-name=kubeworker"
      register: result

    - name: print result
      debug:
        msg: "{{ result }}"







...


