---
#
# EECS 4287/5287: Principles of Cloud Computing
# Author: Aniruddha Gokhale
# Created: Fall 2017
# Modified: Fall 2020
#
# This playbook is our demo master file
# The goal is to show how to have a single master file which then
# includes multiple plays according to some well-designed choreography
#
# This file is similar to the one in the AnsibleOnly_Local_and_Cloud folder
# For now I just kept one play in here but feel free to add more.
#####################################################
### Play 1: Get facts from all our VMs
#
# Here I show the use of import_tasks from child playbooks
#####################################################
# - name: "Create VMs and write to dynamic inventory"
#   hosts: localhost
#   connection: local
#   gather_facts: yes
# #  collections: # this is new starting with Ansible 2.9 (akin to importing package)
# #    - openstack.cloud
#   tasks:
#     - include_tasks: tasks/create_cc_cloud_vm.yml
# #    - include_tasks: tasks/get_facts_cloud_vm.yml

# - name: wait for spin up
#   hosts: localhost
#   tasks:
#   - name: wait for 45 seconds
#     wait_for:
#       timeout: 45
#     delegate_to: localhost
# #
# - name: "set up localhost"
#   hosts: localhost
#   connection: local
#   gather_facts: yes
#   tasks:
#     - include_tasks: tasks/playbook_set_up_local_vm.yml

# - name: execute top
#   hosts: bothvms
#   remote_user: cc
#   tasks:
#   - name: Execute a command on remote cloud VM
#     command: top -n 1 -b  # say we execute our famous command from assignment #1
#     register: output

#   - name: Print the output
#     debug:
#       msg: "{{ output }}"

# - name: "Master Playbook 2: set-up VM2 amd VM3"
#   hosts: bothvms
#   remote_user:  cc
#   tasks:
#   - include_tasks: tasks/playbook_setup_both_cloud_vms.yml


 #host: vm3
- name: "Master Playbook 3: VM3"
  hosts: vm3
  remote_user:  cc
  become: true
  tasks:
  - include_tasks: tasks/playbook_VM3.yml

# - name: "run consumer"
#   hosts: vm2
#   remote_user: cc
#   tasks:
#     - include_tasks: tasks/playbook_VM2_run_consumer.yml

...

